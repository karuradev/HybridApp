# This file contains all the jslint switches which can be used to configure js-lint to investigate 
# your javascript. Uncomment the ones you like
	
#######################
#If assignment expressions should be allowed
#---
# uncomment the correct assignment based on need

allow.assignments=--ass		
#allow.assignments=

#######################
#If google closure idioms should be tolerated
#---
# uncomment the correct assignment based on need

#tolerate.google.closure.idoms=--closure
tolerate.google.closure.idoms=

#######################
#If the continuation statement should be tolerated
#---
# uncomment the correct assignment based on need

tolerate.continue.statement=
#tolerate.continue.statement=--continue 

#######################	
#If bitwise operators should not be allowed
#---
# uncomment the correct assignment based on need

allow.bitwise.operator=--bitwise  
#allow.bitwise.operator=
	
#######################
#If the standard browser globals should be predefined
#---
# uncomment the correct assignment based on need

define.standard.globals=--browser 
#define.standard.globals= 

#######################
#If upper case html should be allowed 
#---
# uncomment the correct assignment based on need

#allow.ucase.html=--cap
allow.ucase.html=      

#######################
#If css workarounds should be tolerated
#---
# uncomment the correct assignment based on need

#tolerate.css.workarounds=--css
tolerate.css.workarounds=      

#######################		  
#If debugger statements should be allowed
#---
# uncomment the correct assignment based on need

#allow.debugger.statements=--debug 
allow.debugger.statements=

#######################
#If logging should be allowed (console, alert, etc.) 
#---
# uncomment the correct assignment based on need
	  
#allow.logging.statements=--devel   
allow.logging.statements=
	
#If == should be allowed
#---
# uncomment the correct assignment based on need
	
#allow.eqeq=--eqeq 
allow.eqeq=  
	
#######################	 
#If es5 syntax should be allowed
#---
# uncomment the correct assignment based on need
	
assume.es5.syntax=--es5   
assume.es5.syntax=
	
#######################
#If eval should be allowed   
#---
# uncomment the correct assignment based on need

#allow.eval=--evil 
allow.eval=
	
#######################
#If for in statements must filter  
#---
# uncomment the correct assignment based on need  
	
#filter.for.in=--forin
filter.for.in=
	
#######################
#If html fragments should be allowed  
#---
# uncomment the correct assignment based on need  

#allow.html.fragments=--fragment   
allow.html.fragments=
	
#######################
#The number of spaces used for indentation (default is 4)
#---
# uncomment the correct assignment based on need

#indent.spaces=--indent 2  
indent.spaces=
	
#######################
#The maximum number of warnings reported (default is 50)
#---
# uncomment the correct assignment based on need
	
#max.error.warning=--maxerr=  
max.error.warning=
	
#######################
#If constructor names must be capitalized
#---
# uncomment the correct assignment based on need
	
#constructors.begins.with.capitals=--newcap   
constructors.begins.with.capitals=
	
#######################
#If names should be checked  
#---
# uncomment the correct assignment based on need

check.names=--nomen       
#check.names=
	
#######################
#If only one var statement per function should be allowed
#---
# uncomment the correct assignment based on need

#allow.onevar.statement=--onevar   
allow.onevar.statement=
	
#######################
#If the scan should stop on first error
#---
# uncomment the correct assignment based on need  

#stop.on.first.error=--passfail 
stop.on.first.error=

#######################
#If increment/decrement should not be allowed
#---
# uncomment the correct assignment based on need

#allow.shortcut.operators=--plusplus
allow.shortcut.operators= 

#######################
#The names of predefined global variables. 
#---
# uncomment the correct assignment based on need
	 
prefedined.variables=--predef window
#prefedined.variables=  

#######################
#If the . should not be allowed in regexp literals
#---
# uncomment the correct assignment based on need  

#no.dot.in.regex.literals=--regexp
no.dot.in.regex.literals= 

#######################
#If the rhino environment globals should be predefined
#---
# uncomment the correct assignment based on need  

#assume.rhino.environment=--rhino
assume.rhino.environment=     

#######################
#If the 'use strict'; pragma is optional
#---
# uncomment the correct assignment based on need

#optional.strict.pragma=--sloppy   
optional.strict.pragma=
	
#######################
#If all forms of subscript notation are tolerated
#---
# uncomment the correct assignment based on need 

allow.sub.notations=--sub      
#allow.sub.notations=
	
#######################
#If variables should be declared before used 
#---
# uncomment the correct assignment based on need

#allow.undef.variables=--undef    
allow.undef.variables=
	
#######################
#If strict whitespace rules apply
#---
# uncomment the correct assignment based on need

#strict.whitespace=--white    
strict.whitespace=
	
#######################
#If the yahoo widgets globals should be predefined
#---
# uncomment the correct assignment based on need 

#assume.yahoo.widgets=--widget
assume.yahoo.widgets=   

#######################
#If ms windows-specigic globals should be predefined
#---
# uncomment the correct assignment based on need

#assume.ms.windows=--windows
assume.ms.windows=  
	
#######################	
#If node.js globals should be predefined
#---
# uncomment the correct assignment based on need

#assume.node.js=--node
assume.node.js=      

#######################
#If really stupid practices are tolerated
#---
# uncomment the correct assignment based on need		

#allow.stupid.practices=--stupid
allow.stupid.practices=      
	
#######################
#If all property names must be declared with /*properties*/
#---
# uncomment the correct assignment based on need	

properties.should.be.annotated=
#properties.should.be.annotated=--properties 

#######################
#If todo comments are tolerated	
#---
# uncomment the correct assignment based on need

tolerate.todo=--todo       
#tolerate.todo=
	
#######################
#If unused parameters should be tolerated
#---
# uncomment the correct assignment based on need

tolerate.unused=--unparam    
#tolerate.unused=
	
########################################
# do not modify below this line
########################################	 

js.lint.directives=${allow.assignments} ${assume.node.js} ${tolerate.google.closure.idoms} ${tolerate.continue.statement} ${allow.bitwise.operator} ${define.standard.globals} ${allow.ucase.html} ${tolerate.css.workarounds} ${allow.debugger.statements} ${allow.logging.statements} ${allow.eqeq} ${assume.es5.syntax} ${allow.eval} ${filter.for.in} ${allow.html.fragments} ${indent.spaces} ${max.error.warning} ${constructors.begins.with.capitals} ${check.names} ${allow.onevar.statement} ${stop.on.first.error} ${allow.shortcut.operators} ${prefedined.variables} ${no.dot.in.regex.literals} ${assume.rhino.environment} ${allow.sub.notations} ${allow.undef.variables} ${strict.whitespace} ${assume.yahoo.widgets} ${assume.ms.windows} ${properties.should.be.annotated} ${allow.stupid.practices} ${tolerate.todo} ${tolerate.unused}
